name: WebAssembly Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  wasm-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      run: |
        rustup update stable
        rustup default stable
        rustup target add wasm32-unknown-unknown
        
    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
    - name: Build WebAssembly
      run: |
        wasm-pack build --target web
        wasm-pack build --target bundler
        wasm-pack build --target nodejs
        
    - name: Run tests for WebAssembly
      run: wasm-pack test --headless --chrome
      
    - name: Upload WebAssembly artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mingbu-wasm
        path: |
          pkg/
          
  wasm-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      run: |
        rustup update stable
        rustup default stable
        rustup target add wasm32-unknown-unknown
        
    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        
    - name: Build WebAssembly for release
      run: |
        wasm-pack build --release --target web
        tar -czf mingbu-wasm-web.tar.gz pkg/
        
    - name: Upload WebAssembly release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./mingbu-wasm-web.tar.gz
        asset_name: mingbu-wasm-web.tar.gz
        asset_content_type: application/gzip
