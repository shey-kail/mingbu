name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1
      with:
        changelog_file: CHANGELOG.md  # 如果有变更日志文件的话
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.extract-release-notes.outputs.release-notes }}
        draft: false
        prerelease: false

  release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: mingbu-x86_64-unknown-linux-gnu
            binary_name: libmingbu.a
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: mingbu-x86_64-pc-windows-msvc
            binary_name: mingbu.lib
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: mingbu-x86_64-apple-darwin
            binary_name: libmingbu.a

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      run: |
        rustup update stable
        rustup default stable
        rustup target add ${{ matrix.target }}
        
    - name: Build release
      run: cargo build --target ${{ matrix.target }} --release
      
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        asset_name: ${{ matrix.artifact_name }}.tar.gz
        asset_content_type: application/gzip